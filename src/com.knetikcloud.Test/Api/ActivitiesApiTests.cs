/* 
 * Knetik Platform API Documentation latest 
 *
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using com.knetikcloud.Client;
using com.knetikcloud.Api;
using com.knetikcloud.Model;

namespace com.knetikcloud.Test
{
    /// <summary>
    ///  Class for testing ActivitiesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ActivitiesApiTests
    {
        private ActivitiesApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ActivitiesApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ActivitiesApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ActivitiesApi
            //Assert.IsInstanceOfType(typeof(ActivitiesApi), instance, "instance is a ActivitiesApi");
        }

        
        /// <summary>
        /// Test CreateActivity
        /// </summary>
        [Test]
        public void CreateActivityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ActivityResource activityResource = null;
            //var response = instance.CreateActivity(activityResource);
            //Assert.IsInstanceOf<ActivityResource> (response, "response is ActivityResource");
        }
        
        /// <summary>
        /// Test CreateActivityOccurrence
        /// </summary>
        [Test]
        public void CreateActivityOccurrenceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? test = null;
            //CreateActivityOccurrenceRequest activityOccurrenceResource = null;
            //var response = instance.CreateActivityOccurrence(test, activityOccurrenceResource);
            //Assert.IsInstanceOf<ActivityOccurrenceResource> (response, "response is ActivityOccurrenceResource");
        }
        
        /// <summary>
        /// Test CreateActivityTemplate
        /// </summary>
        [Test]
        public void CreateActivityTemplateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TemplateResource activityTemplateResource = null;
            //var response = instance.CreateActivityTemplate(activityTemplateResource);
            //Assert.IsInstanceOf<TemplateResource> (response, "response is TemplateResource");
        }
        
        /// <summary>
        /// Test DeleteActivity
        /// </summary>
        [Test]
        public void DeleteActivityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? id = null;
            //instance.DeleteActivity(id);
            
        }
        
        /// <summary>
        /// Test DeleteActivityTemplate
        /// </summary>
        [Test]
        public void DeleteActivityTemplateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string cascade = null;
            //instance.DeleteActivityTemplate(id, cascade);
            
        }
        
        /// <summary>
        /// Test GetActivities
        /// </summary>
        [Test]
        public void GetActivitiesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? filterTemplate = null;
            //string filterName = null;
            //string filterId = null;
            //int? size = null;
            //int? page = null;
            //string order = null;
            //var response = instance.GetActivities(filterTemplate, filterName, filterId, size, page, order);
            //Assert.IsInstanceOf<PageResourceBareActivityResource> (response, "response is PageResourceBareActivityResource");
        }
        
        /// <summary>
        /// Test GetActivity
        /// </summary>
        [Test]
        public void GetActivityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? id = null;
            //var response = instance.GetActivity(id);
            //Assert.IsInstanceOf<ActivityResource> (response, "response is ActivityResource");
        }
        
        /// <summary>
        /// Test GetActivityOccurrenceDetails
        /// </summary>
        [Test]
        public void GetActivityOccurrenceDetailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? activityOccurrenceId = null;
            //var response = instance.GetActivityOccurrenceDetails(activityOccurrenceId);
            //Assert.IsInstanceOf<ActivityOccurrenceResource> (response, "response is ActivityOccurrenceResource");
        }
        
        /// <summary>
        /// Test GetActivityTemplate
        /// </summary>
        [Test]
        public void GetActivityTemplateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetActivityTemplate(id);
            //Assert.IsInstanceOf<TemplateResource> (response, "response is TemplateResource");
        }
        
        /// <summary>
        /// Test GetActivityTemplates
        /// </summary>
        [Test]
        public void GetActivityTemplatesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? size = null;
            //int? page = null;
            //string order = null;
            //var response = instance.GetActivityTemplates(size, page, order);
            //Assert.IsInstanceOf<PageResourceTemplateResource> (response, "response is PageResourceTemplateResource");
        }
        
        /// <summary>
        /// Test ListActivityOccurrences
        /// </summary>
        [Test]
        public void ListActivityOccurrencesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filterActivity = null;
            //string filterStatus = null;
            //int? filterEvent = null;
            //int? filterChallenge = null;
            //int? size = null;
            //int? page = null;
            //string order = null;
            //var response = instance.ListActivityOccurrences(filterActivity, filterStatus, filterEvent, filterChallenge, size, page, order);
            //Assert.IsInstanceOf<PageResourceActivityOccurrenceResource> (response, "response is PageResourceActivityOccurrenceResource");
        }
        
        /// <summary>
        /// Test SetActivityOccurrenceResults
        /// </summary>
        [Test]
        public void SetActivityOccurrenceResultsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? activityOccurrenceId = null;
            //ActivityOccurrenceResultsResource activityOccurrenceResults = null;
            //var response = instance.SetActivityOccurrenceResults(activityOccurrenceId, activityOccurrenceResults);
            //Assert.IsInstanceOf<ActivityOccurrenceResults> (response, "response is ActivityOccurrenceResults");
        }
        
        /// <summary>
        /// Test UpdateActivity
        /// </summary>
        [Test]
        public void UpdateActivityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? id = null;
            //ActivityResource activityResource = null;
            //var response = instance.UpdateActivity(id, activityResource);
            //Assert.IsInstanceOf<ActivityResource> (response, "response is ActivityResource");
        }
        
        /// <summary>
        /// Test UpdateActivityOccurrence
        /// </summary>
        [Test]
        public void UpdateActivityOccurrenceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? activityOccurrenceId = null;
            //string activityOccurrenceStatus = null;
            //instance.UpdateActivityOccurrence(activityOccurrenceId, activityOccurrenceStatus);
            
        }
        
        /// <summary>
        /// Test UpdateActivityTemplate
        /// </summary>
        [Test]
        public void UpdateActivityTemplateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //TemplateResource activityTemplateResource = null;
            //var response = instance.UpdateActivityTemplate(id, activityTemplateResource);
            //Assert.IsInstanceOf<TemplateResource> (response, "response is TemplateResource");
        }
        
    }

}
