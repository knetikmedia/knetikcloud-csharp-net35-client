/* 
 * Knetik Platform API Documentation latest 
 *
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using com.knetikcloud.Client;
using com.knetikcloud.Api;
using com.knetikcloud.Model;

namespace com.knetikcloud.Test
{
    /// <summary>
    ///  Class for testing TaxesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class TaxesApiTests
    {
        private TaxesApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new TaxesApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of TaxesApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' TaxesApi
            //Assert.IsInstanceOfType(typeof(TaxesApi), instance, "instance is a TaxesApi");
        }

        
        /// <summary>
        /// Test CreateCountryTax
        /// </summary>
        [Test]
        public void CreateCountryTaxTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CountryTaxResource taxResource = null;
            //var response = instance.CreateCountryTax(taxResource);
            //Assert.IsInstanceOf<CountryTaxResource> (response, "response is CountryTaxResource");
        }
        
        /// <summary>
        /// Test CreateStateTax
        /// </summary>
        [Test]
        public void CreateStateTaxTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string countryCodeIso3 = null;
            //StateTaxResource taxResource = null;
            //var response = instance.CreateStateTax(countryCodeIso3, taxResource);
            //Assert.IsInstanceOf<StateTaxResource> (response, "response is StateTaxResource");
        }
        
        /// <summary>
        /// Test DeleteCountryTax
        /// </summary>
        [Test]
        public void DeleteCountryTaxTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string countryCodeIso3 = null;
            //instance.DeleteCountryTax(countryCodeIso3);
            
        }
        
        /// <summary>
        /// Test DeleteStateTax
        /// </summary>
        [Test]
        public void DeleteStateTaxTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string countryCodeIso3 = null;
            //string stateCode = null;
            //instance.DeleteStateTax(countryCodeIso3, stateCode);
            
        }
        
        /// <summary>
        /// Test GetCountryTax
        /// </summary>
        [Test]
        public void GetCountryTaxTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string countryCodeIso3 = null;
            //var response = instance.GetCountryTax(countryCodeIso3);
            //Assert.IsInstanceOf<CountryTaxResource> (response, "response is CountryTaxResource");
        }
        
        /// <summary>
        /// Test GetCountryTaxes
        /// </summary>
        [Test]
        public void GetCountryTaxesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? size = null;
            //int? page = null;
            //string order = null;
            //var response = instance.GetCountryTaxes(size, page, order);
            //Assert.IsInstanceOf<PageResourceCountryTaxResource> (response, "response is PageResourceCountryTaxResource");
        }
        
        /// <summary>
        /// Test GetStateTax
        /// </summary>
        [Test]
        public void GetStateTaxTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string countryCodeIso3 = null;
            //string stateCode = null;
            //var response = instance.GetStateTax(countryCodeIso3, stateCode);
            //Assert.IsInstanceOf<StateTaxResource> (response, "response is StateTaxResource");
        }
        
        /// <summary>
        /// Test GetStateTaxesForCountries
        /// </summary>
        [Test]
        public void GetStateTaxesForCountriesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? size = null;
            //int? page = null;
            //string order = null;
            //var response = instance.GetStateTaxesForCountries(size, page, order);
            //Assert.IsInstanceOf<PageResourceStateTaxResource> (response, "response is PageResourceStateTaxResource");
        }
        
        /// <summary>
        /// Test GetStateTaxesForCountry
        /// </summary>
        [Test]
        public void GetStateTaxesForCountryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string countryCodeIso3 = null;
            //int? size = null;
            //int? page = null;
            //string order = null;
            //var response = instance.GetStateTaxesForCountry(countryCodeIso3, size, page, order);
            //Assert.IsInstanceOf<PageResourceStateTaxResource> (response, "response is PageResourceStateTaxResource");
        }
        
        /// <summary>
        /// Test UpdateCountryTax
        /// </summary>
        [Test]
        public void UpdateCountryTaxTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string countryCodeIso3 = null;
            //CountryTaxResource taxResource = null;
            //var response = instance.UpdateCountryTax(countryCodeIso3, taxResource);
            //Assert.IsInstanceOf<CountryTaxResource> (response, "response is CountryTaxResource");
        }
        
        /// <summary>
        /// Test UpdateStateTax
        /// </summary>
        [Test]
        public void UpdateStateTaxTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string countryCodeIso3 = null;
            //string stateCode = null;
            //StateTaxResource taxResource = null;
            //var response = instance.UpdateStateTax(countryCodeIso3, stateCode, taxResource);
            //Assert.IsInstanceOf<StateTaxResource> (response, "response is StateTaxResource");
        }
        
    }

}
