/* 
 * Knetik Platform API Documentation latest 
 *
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using com.knetikcloud.Client;
using com.knetikcloud.Api;
using com.knetikcloud.Model;

namespace com.knetikcloud.Test
{
    /// <summary>
    ///  Class for testing StoreSubscriptionsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class StoreSubscriptionsApiTests
    {
        private StoreSubscriptionsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new StoreSubscriptionsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of StoreSubscriptionsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' StoreSubscriptionsApi
            //Assert.IsInstanceOfType(typeof(StoreSubscriptionsApi), instance, "instance is a StoreSubscriptionsApi");
        }

        
        /// <summary>
        /// Test CreateSubscription
        /// </summary>
        [Test]
        public void CreateSubscriptionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SubscriptionResource subscriptionResource = null;
            //var response = instance.CreateSubscription(subscriptionResource);
            //Assert.IsInstanceOf<SubscriptionResource> (response, "response is SubscriptionResource");
        }
        
        /// <summary>
        /// Test CreateSubscriptionTemplate
        /// </summary>
        [Test]
        public void CreateSubscriptionTemplateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SubscriptionTemplateResource subscriptionTemplateResource = null;
            //var response = instance.CreateSubscriptionTemplate(subscriptionTemplateResource);
            //Assert.IsInstanceOf<SubscriptionTemplateResource> (response, "response is SubscriptionTemplateResource");
        }
        
        /// <summary>
        /// Test DeleteSubscription
        /// </summary>
        [Test]
        public void DeleteSubscriptionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //string planId = null;
            //instance.DeleteSubscription(id, planId);
            
        }
        
        /// <summary>
        /// Test DeleteSubscriptionTemplate
        /// </summary>
        [Test]
        public void DeleteSubscriptionTemplateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string cascade = null;
            //instance.DeleteSubscriptionTemplate(id, cascade);
            
        }
        
        /// <summary>
        /// Test GetSubscription
        /// </summary>
        [Test]
        public void GetSubscriptionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetSubscription(id);
            //Assert.IsInstanceOf<SubscriptionResource> (response, "response is SubscriptionResource");
        }
        
        /// <summary>
        /// Test GetSubscriptionTemplate
        /// </summary>
        [Test]
        public void GetSubscriptionTemplateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetSubscriptionTemplate(id);
            //Assert.IsInstanceOf<SubscriptionTemplateResource> (response, "response is SubscriptionTemplateResource");
        }
        
        /// <summary>
        /// Test GetSubscriptionTemplates
        /// </summary>
        [Test]
        public void GetSubscriptionTemplatesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? size = null;
            //int? page = null;
            //string order = null;
            //var response = instance.GetSubscriptionTemplates(size, page, order);
            //Assert.IsInstanceOf<PageResourceSubscriptionTemplateResource> (response, "response is PageResourceSubscriptionTemplateResource");
        }
        
        /// <summary>
        /// Test GetSubscriptions
        /// </summary>
        [Test]
        public void GetSubscriptionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? size = null;
            //int? page = null;
            //string order = null;
            //var response = instance.GetSubscriptions(size, page, order);
            //Assert.IsInstanceOf<PageResourceSubscriptionResource> (response, "response is PageResourceSubscriptionResource");
        }
        
        /// <summary>
        /// Test ProcessSubscriptions
        /// </summary>
        [Test]
        public void ProcessSubscriptionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ProcessSubscriptions();
            
        }
        
        /// <summary>
        /// Test UpdateSubscription
        /// </summary>
        [Test]
        public void UpdateSubscriptionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //SubscriptionResource subscriptionResource = null;
            //instance.UpdateSubscription(id, subscriptionResource);
            
        }
        
        /// <summary>
        /// Test UpdateSubscriptionTemplate
        /// </summary>
        [Test]
        public void UpdateSubscriptionTemplateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //SubscriptionTemplateResource subscriptionTemplateResource = null;
            //var response = instance.UpdateSubscriptionTemplate(id, subscriptionTemplateResource);
            //Assert.IsInstanceOf<SubscriptionTemplateResource> (response, "response is SubscriptionTemplateResource");
        }
        
    }

}
