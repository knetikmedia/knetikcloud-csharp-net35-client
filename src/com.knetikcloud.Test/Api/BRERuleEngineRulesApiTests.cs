/* 
 * Knetik Platform API Documentation latest 
 *
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using com.knetikcloud.Client;
using com.knetikcloud.Api;
using com.knetikcloud.Model;

namespace com.knetikcloud.Test
{
    /// <summary>
    ///  Class for testing BRERuleEngineRulesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class BRERuleEngineRulesApiTests
    {
        private BRERuleEngineRulesApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new BRERuleEngineRulesApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of BRERuleEngineRulesApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' BRERuleEngineRulesApi
            //Assert.IsInstanceOfType(typeof(BRERuleEngineRulesApi), instance, "instance is a BRERuleEngineRulesApi");
        }

        
        /// <summary>
        /// Test CreateBRERule
        /// </summary>
        [Test]
        public void CreateBRERuleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BreRule breRule = null;
            //var response = instance.CreateBRERule(breRule);
            //Assert.IsInstanceOf<BreRule> (response, "response is BreRule");
        }
        
        /// <summary>
        /// Test DeleteBRERule
        /// </summary>
        [Test]
        public void DeleteBRERuleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.DeleteBRERule(id);
            
        }
        
        /// <summary>
        /// Test GetBREExpressionAsString
        /// </summary>
        [Test]
        public void GetBREExpressionAsStringTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Expressionobject expression = null;
            //var response = instance.GetBREExpressionAsString(expression);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test GetBRERule
        /// </summary>
        [Test]
        public void GetBRERuleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetBRERule(id);
            //Assert.IsInstanceOf<BreRule> (response, "response is BreRule");
        }
        
        /// <summary>
        /// Test GetBRERules
        /// </summary>
        [Test]
        public void GetBRERulesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filterName = null;
            //bool? filterEnabled = null;
            //bool? filterSystem = null;
            //string filterTrigger = null;
            //string filterAction = null;
            //string filterCondition = null;
            //int? size = null;
            //int? page = null;
            //var response = instance.GetBRERules(filterName, filterEnabled, filterSystem, filterTrigger, filterAction, filterCondition, size, page);
            //Assert.IsInstanceOf<PageResourceBreRule> (response, "response is PageResourceBreRule");
        }
        
        /// <summary>
        /// Test SetBRERule
        /// </summary>
        [Test]
        public void SetBRERuleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //BooleanResource enabled = null;
            //instance.SetBRERule(id, enabled);
            
        }
        
        /// <summary>
        /// Test UpdateBRERule
        /// </summary>
        [Test]
        public void UpdateBRERuleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //BreRule breRule = null;
            //var response = instance.UpdateBRERule(id, breRule);
            //Assert.IsInstanceOf<BreRule> (response, "response is BreRule");
        }
        
    }

}
