/* 
 * Knetik Platform API Documentation latest 
 *
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using com.knetikcloud.Client;
using com.knetikcloud.Api;
using com.knetikcloud.Model;

namespace com.knetikcloud.Test
{
    /// <summary>
    ///  Class for testing PaymentsWalletsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class PaymentsWalletsApiTests
    {
        private PaymentsWalletsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new PaymentsWalletsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of PaymentsWalletsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' PaymentsWalletsApi
            //Assert.IsInstanceOfType(typeof(PaymentsWalletsApi), instance, "instance is a PaymentsWalletsApi");
        }

        
        /// <summary>
        /// Test GetUserWallet
        /// </summary>
        [Test]
        public void GetUserWalletTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? userId = null;
            //string currencyCode = null;
            //var response = instance.GetUserWallet(userId, currencyCode);
            //Assert.IsInstanceOf<SimpleWallet> (response, "response is SimpleWallet");
        }
        
        /// <summary>
        /// Test GetUserWalletTransactions
        /// </summary>
        [Test]
        public void GetUserWalletTransactionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? userId = null;
            //string currencyCode = null;
            //string filterType = null;
            //long? filterMaxDate = null;
            //long? filterMinDate = null;
            //string filterSign = null;
            //int? size = null;
            //int? page = null;
            //string order = null;
            //var response = instance.GetUserWalletTransactions(userId, currencyCode, filterType, filterMaxDate, filterMinDate, filterSign, size, page, order);
            //Assert.IsInstanceOf<PageResourceWalletTransactionResource> (response, "response is PageResourceWalletTransactionResource");
        }
        
        /// <summary>
        /// Test GetUserWallets
        /// </summary>
        [Test]
        public void GetUserWalletsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? userId = null;
            //var response = instance.GetUserWallets(userId);
            //Assert.IsInstanceOf<List<SimpleWallet>> (response, "response is List<SimpleWallet>");
        }
        
        /// <summary>
        /// Test GetWalletBalances
        /// </summary>
        [Test]
        public void GetWalletBalancesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetWalletBalances();
            //Assert.IsInstanceOf<PageResourceWalletTotalResponse> (response, "response is PageResourceWalletTotalResponse");
        }
        
        /// <summary>
        /// Test GetWalletTransactions
        /// </summary>
        [Test]
        public void GetWalletTransactionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? filterInvoice = null;
            //string filterType = null;
            //string filterDate = null;
            //string filterSign = null;
            //int? filterUserId = null;
            //string filterUsername = null;
            //string filterDetails = null;
            //string filterCurrencyCode = null;
            //int? size = null;
            //int? page = null;
            //string order = null;
            //var response = instance.GetWalletTransactions(filterInvoice, filterType, filterDate, filterSign, filterUserId, filterUsername, filterDetails, filterCurrencyCode, size, page, order);
            //Assert.IsInstanceOf<PageResourceWalletTransactionResource> (response, "response is PageResourceWalletTransactionResource");
        }
        
        /// <summary>
        /// Test GetWallets
        /// </summary>
        [Test]
        public void GetWalletsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? size = null;
            //int? page = null;
            //string order = null;
            //var response = instance.GetWallets(size, page, order);
            //Assert.IsInstanceOf<PageResourceSimpleWallet> (response, "response is PageResourceSimpleWallet");
        }
        
        /// <summary>
        /// Test UpdateWalletBalance
        /// </summary>
        [Test]
        public void UpdateWalletBalanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? userId = null;
            //string currencyCode = null;
            //WalletAlterRequest request = null;
            //var response = instance.UpdateWalletBalance(userId, currencyCode, request);
            //Assert.IsInstanceOf<WalletTransactionResource> (response, "response is WalletTransactionResource");
        }
        
    }

}
