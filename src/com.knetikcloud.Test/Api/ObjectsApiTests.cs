/* 
 * Knetik Platform API Documentation latest 
 *
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using com.knetikcloud.Client;
using com.knetikcloud.Api;
using com.knetikcloud.Model;

namespace com.knetikcloud.Test
{
    /// <summary>
    ///  Class for testing ObjectsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ObjectsApiTests
    {
        private ObjectsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ObjectsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ObjectsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ObjectsApi
            //Assert.IsInstanceOfType(typeof(ObjectsApi), instance, "instance is a ObjectsApi");
        }

        
        /// <summary>
        /// Test CreateObjectItem
        /// </summary>
        [Test]
        public void CreateObjectItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string templateId = null;
            //bool? cascade = null;
            //ObjectResource objectItem = null;
            //var response = instance.CreateObjectItem(templateId, cascade, objectItem);
            //Assert.IsInstanceOf<ObjectResource> (response, "response is ObjectResource");
        }
        
        /// <summary>
        /// Test CreateObjectTemplate
        /// </summary>
        [Test]
        public void CreateObjectTemplateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ItemTemplateResource template = null;
            //var response = instance.CreateObjectTemplate(template);
            //Assert.IsInstanceOf<ItemTemplateResource> (response, "response is ItemTemplateResource");
        }
        
        /// <summary>
        /// Test DeleteObjectItem
        /// </summary>
        [Test]
        public void DeleteObjectItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string templateId = null;
            //int? objectId = null;
            //instance.DeleteObjectItem(templateId, objectId);
            
        }
        
        /// <summary>
        /// Test DeleteObjectTemplate
        /// </summary>
        [Test]
        public void DeleteObjectTemplateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string cascade = null;
            //instance.DeleteObjectTemplate(id, cascade);
            
        }
        
        /// <summary>
        /// Test GetObjectItem
        /// </summary>
        [Test]
        public void GetObjectItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string templateId = null;
            //int? objectId = null;
            //var response = instance.GetObjectItem(templateId, objectId);
            //Assert.IsInstanceOf<ObjectResource> (response, "response is ObjectResource");
        }
        
        /// <summary>
        /// Test GetObjectItems
        /// </summary>
        [Test]
        public void GetObjectItemsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string templateId = null;
            //int? size = null;
            //int? page = null;
            //string order = null;
            //var response = instance.GetObjectItems(templateId, size, page, order);
            //Assert.IsInstanceOf<PageResourceObjectResource> (response, "response is PageResourceObjectResource");
        }
        
        /// <summary>
        /// Test GetObjectTemplate
        /// </summary>
        [Test]
        public void GetObjectTemplateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetObjectTemplate(id);
            //Assert.IsInstanceOf<ItemTemplateResource> (response, "response is ItemTemplateResource");
        }
        
        /// <summary>
        /// Test GetObjectTemplates
        /// </summary>
        [Test]
        public void GetObjectTemplatesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? size = null;
            //int? page = null;
            //string order = null;
            //var response = instance.GetObjectTemplates(size, page, order);
            //Assert.IsInstanceOf<PageResourceItemTemplateResource> (response, "response is PageResourceItemTemplateResource");
        }
        
        /// <summary>
        /// Test UpdateObjectItem
        /// </summary>
        [Test]
        public void UpdateObjectItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string templateId = null;
            //int? entitlementId = null;
            //bool? cascade = null;
            //EntitlementItem objectItem = null;
            //instance.UpdateObjectItem(templateId, entitlementId, cascade, objectItem);
            
        }
        
        /// <summary>
        /// Test UpdateObjectTemplate
        /// </summary>
        [Test]
        public void UpdateObjectTemplateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //ItemTemplateResource template = null;
            //var response = instance.UpdateObjectTemplate(id, template);
            //Assert.IsInstanceOf<ItemTemplateResource> (response, "response is ItemTemplateResource");
        }
        
    }

}
