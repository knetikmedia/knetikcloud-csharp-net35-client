/* 
 * Knetik Platform API Documentation latest 
 *
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using com.knetikcloud.Client;
using com.knetikcloud.Api;
using com.knetikcloud.Model;

namespace com.knetikcloud.Test
{
    /// <summary>
    ///  Class for testing ReportingRevenueApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ReportingRevenueApiTests
    {
        private ReportingRevenueApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ReportingRevenueApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ReportingRevenueApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ReportingRevenueApi
            //Assert.IsInstanceOfType(typeof(ReportingRevenueApi), instance, "instance is a ReportingRevenueApi");
        }

        
        /// <summary>
        /// Test GetItemRevenue
        /// </summary>
        [Test]
        public void GetItemRevenueTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string currencyCode = null;
            //long? startDate = null;
            //long? endDate = null;
            //var response = instance.GetItemRevenue(currencyCode, startDate, endDate);
            //Assert.IsInstanceOf<RevenueReportResource> (response, "response is RevenueReportResource");
        }
        
        /// <summary>
        /// Test GetRefundRevenue
        /// </summary>
        [Test]
        public void GetRefundRevenueTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string currencyCode = null;
            //long? startDate = null;
            //long? endDate = null;
            //var response = instance.GetRefundRevenue(currencyCode, startDate, endDate);
            //Assert.IsInstanceOf<RevenueReportResource> (response, "response is RevenueReportResource");
        }
        
        /// <summary>
        /// Test GetRevenueByCountry
        /// </summary>
        [Test]
        public void GetRevenueByCountryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string currencyCode = null;
            //long? startDate = null;
            //long? endDate = null;
            //int? size = null;
            //int? page = null;
            //var response = instance.GetRevenueByCountry(currencyCode, startDate, endDate, size, page);
            //Assert.IsInstanceOf<PageResourceRevenueCountryReportResource> (response, "response is PageResourceRevenueCountryReportResource");
        }
        
        /// <summary>
        /// Test GetRevenueByItem
        /// </summary>
        [Test]
        public void GetRevenueByItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string currencyCode = null;
            //long? startDate = null;
            //long? endDate = null;
            //int? size = null;
            //int? page = null;
            //var response = instance.GetRevenueByItem(currencyCode, startDate, endDate, size, page);
            //Assert.IsInstanceOf<PageResourceRevenueProductReportResource> (response, "response is PageResourceRevenueProductReportResource");
        }
        
        /// <summary>
        /// Test GetSubscriptionRevenue
        /// </summary>
        [Test]
        public void GetSubscriptionRevenueTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string currencyCode = null;
            //long? startDate = null;
            //long? endDate = null;
            //var response = instance.GetSubscriptionRevenue(currencyCode, startDate, endDate);
            //Assert.IsInstanceOf<RevenueReportResource> (response, "response is RevenueReportResource");
        }
        
    }

}
