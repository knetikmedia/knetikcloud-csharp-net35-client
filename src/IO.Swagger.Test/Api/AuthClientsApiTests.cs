/* 
 * Knetik Platform API Documentation latest 
 *
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing AuthClientsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class AuthClientsApiTests
    {
        private AuthClientsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new AuthClientsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of AuthClientsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' AuthClientsApi
            //Assert.IsInstanceOfType(typeof(AuthClientsApi), instance, "instance is a AuthClientsApi");
        }

        
        /// <summary>
        /// Test CreateClient
        /// </summary>
        [Test]
        public void CreateClientTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ClientResource clientResource = null;
            //var response = instance.CreateClient(clientResource);
            //Assert.IsInstanceOf<ClientResource> (response, "response is ClientResource");
        }
        
        /// <summary>
        /// Test DeleteClient
        /// </summary>
        [Test]
        public void DeleteClientTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string clientKey = null;
            //instance.DeleteClient(clientKey);
            
        }
        
        /// <summary>
        /// Test GetClient
        /// </summary>
        [Test]
        public void GetClientTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string clientKey = null;
            //var response = instance.GetClient(clientKey);
            //Assert.IsInstanceOf<ClientResource> (response, "response is ClientResource");
        }
        
        /// <summary>
        /// Test GetClientGrantTypes
        /// </summary>
        [Test]
        public void GetClientGrantTypesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetClientGrantTypes();
            //Assert.IsInstanceOf<List<GrantTypeResource>> (response, "response is List<GrantTypeResource>");
        }
        
        /// <summary>
        /// Test GetClients
        /// </summary>
        [Test]
        public void GetClientsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? size = null;
            //int? page = null;
            //string order = null;
            //var response = instance.GetClients(size, page, order);
            //Assert.IsInstanceOf<PageResourceClientResource> (response, "response is PageResourceClientResource");
        }
        
        /// <summary>
        /// Test SetClientGrantTypes
        /// </summary>
        [Test]
        public void SetClientGrantTypesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string clientKey = null;
            //List<string> grantList = null;
            //instance.SetClientGrantTypes(clientKey, grantList);
            
        }
        
        /// <summary>
        /// Test SetClientRedirectUris
        /// </summary>
        [Test]
        public void SetClientRedirectUrisTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string clientKey = null;
            //List<string> redirectList = null;
            //instance.SetClientRedirectUris(clientKey, redirectList);
            
        }
        
        /// <summary>
        /// Test UpdateClient
        /// </summary>
        [Test]
        public void UpdateClientTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string clientKey = null;
            //ClientResource clientResource = null;
            //var response = instance.UpdateClient(clientKey, clientResource);
            //Assert.IsInstanceOf<ClientResource> (response, "response is ClientResource");
        }
        
    }

}
