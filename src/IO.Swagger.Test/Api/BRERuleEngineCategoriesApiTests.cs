/* 
 * Knetik Platform API Documentation latest 
 *
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing BRERuleEngineCategoriesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class BRERuleEngineCategoriesApiTests
    {
        private BRERuleEngineCategoriesApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new BRERuleEngineCategoriesApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of BRERuleEngineCategoriesApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' BRERuleEngineCategoriesApi
            //Assert.IsInstanceOfType(typeof(BRERuleEngineCategoriesApi), instance, "instance is a BRERuleEngineCategoriesApi");
        }

        
        /// <summary>
        /// Test CreateBRECategoryTemplate
        /// </summary>
        [Test]
        public void CreateBRECategoryTemplateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TemplateResource template = null;
            //var response = instance.CreateBRECategoryTemplate(template);
            //Assert.IsInstanceOf<TemplateResource> (response, "response is TemplateResource");
        }
        
        /// <summary>
        /// Test DeleteBRECategoryTemplate
        /// </summary>
        [Test]
        public void DeleteBRECategoryTemplateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string cascade = null;
            //instance.DeleteBRECategoryTemplate(id, cascade);
            
        }
        
        /// <summary>
        /// Test GetBRECategories
        /// </summary>
        [Test]
        public void GetBRECategoriesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? size = null;
            //int? page = null;
            //var response = instance.GetBRECategories(size, page);
            //Assert.IsInstanceOf<PageResourceBreCategoryResource> (response, "response is PageResourceBreCategoryResource");
        }
        
        /// <summary>
        /// Test GetBRECategory
        /// </summary>
        [Test]
        public void GetBRECategoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //var response = instance.GetBRECategory(name);
            //Assert.IsInstanceOf<BreCategoryResource> (response, "response is BreCategoryResource");
        }
        
        /// <summary>
        /// Test GetBRECategoryTemplate
        /// </summary>
        [Test]
        public void GetBRECategoryTemplateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetBRECategoryTemplate(id);
            //Assert.IsInstanceOf<TemplateResource> (response, "response is TemplateResource");
        }
        
        /// <summary>
        /// Test GetBRECategoryTemplates
        /// </summary>
        [Test]
        public void GetBRECategoryTemplatesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? size = null;
            //int? page = null;
            //string order = null;
            //var response = instance.GetBRECategoryTemplates(size, page, order);
            //Assert.IsInstanceOf<PageResourceTemplateResource> (response, "response is PageResourceTemplateResource");
        }
        
        /// <summary>
        /// Test UpdateBRECategory
        /// </summary>
        [Test]
        public void UpdateBRECategoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //BreCategoryResource category = null;
            //var response = instance.UpdateBRECategory(name, category);
            //Assert.IsInstanceOf<BreCategoryResource> (response, "response is BreCategoryResource");
        }
        
        /// <summary>
        /// Test UpdateBRECategoryTemplate
        /// </summary>
        [Test]
        public void UpdateBRECategoryTemplateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //TemplateResource template = null;
            //var response = instance.UpdateBRECategoryTemplate(id, template);
            //Assert.IsInstanceOf<TemplateResource> (response, "response is TemplateResource");
        }
        
    }

}
