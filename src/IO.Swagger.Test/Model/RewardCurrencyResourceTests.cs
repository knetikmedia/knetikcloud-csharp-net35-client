/* 
 * Knetik Platform API Documentation latest 
 *
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing RewardCurrencyResource
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class RewardCurrencyResourceTests
    {
        // TODO uncomment below to declare an instance variable for RewardCurrencyResource
        //private RewardCurrencyResource instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of RewardCurrencyResource
            //instance = new RewardCurrencyResource();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of RewardCurrencyResource
        /// </summary>
        [Test]
        public void RewardCurrencyResourceInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" RewardCurrencyResource
            //Assert.IsInstanceOfType<RewardCurrencyResource> (instance, "variable 'instance' is a RewardCurrencyResource");
        }

        /// <summary>
        /// Test the property 'CurrencyCode'
        /// </summary>
        [Test]
        public void CurrencyCodeTest()
        {
            // TODO unit test for the property 'CurrencyCode'
        }
        /// <summary>
        /// Test the property 'CurrencyName'
        /// </summary>
        [Test]
        public void CurrencyNameTest()
        {
            // TODO unit test for the property 'CurrencyName'
        }
        /// <summary>
        /// Test the property 'MaxRank'
        /// </summary>
        [Test]
        public void MaxRankTest()
        {
            // TODO unit test for the property 'MaxRank'
        }
        /// <summary>
        /// Test the property 'MinRank'
        /// </summary>
        [Test]
        public void MinRankTest()
        {
            // TODO unit test for the property 'MinRank'
        }
        /// <summary>
        /// Test the property 'Percent'
        /// </summary>
        [Test]
        public void PercentTest()
        {
            // TODO unit test for the property 'Percent'
        }
        /// <summary>
        /// Test the property 'Value'
        /// </summary>
        [Test]
        public void ValueTest()
        {
            // TODO unit test for the property 'Value'
        }

    }

}
