/* 
 * Knetik Platform API Documentation latest 
 *
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = com.knetikcloud.Client.SwaggerDateConverter;

namespace com.knetikcloud.Model
{
    /// <summary>
    /// CustomerConfig
    /// </summary>
    [DataContract]
    public partial class CustomerConfig :  IEquatable<CustomerConfig>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CustomerConfig" /> class.
        /// </summary>
        /// <param name="Aliases">Aliases.</param>
        /// <param name="Database">Database.</param>
        /// <param name="Name">Name.</param>
        /// <param name="S3Config">S3Config.</param>
        public CustomerConfig(string Aliases = default(string), DatabaseConfig Database = default(DatabaseConfig), string Name = default(string), S3Config S3Config = default(S3Config))
        {
            this.Aliases = Aliases;
            this.Database = Database;
            this.Name = Name;
            this.S3Config = S3Config;
        }
        
        /// <summary>
        /// Gets or Sets Aliases
        /// </summary>
        [DataMember(Name="aliases", EmitDefaultValue=false)]
        public string Aliases { get; set; }

        /// <summary>
        /// Gets or Sets Database
        /// </summary>
        [DataMember(Name="database", EmitDefaultValue=false)]
        public DatabaseConfig Database { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets S3Config
        /// </summary>
        [DataMember(Name="s3_config", EmitDefaultValue=false)]
        public S3Config S3Config { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CustomerConfig {\n");
            sb.Append("  Aliases: ").Append(Aliases).Append("\n");
            sb.Append("  Database: ").Append(Database).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  S3Config: ").Append(S3Config).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CustomerConfig);
        }

        /// <summary>
        /// Returns true if CustomerConfig instances are equal
        /// </summary>
        /// <param name="input">Instance of CustomerConfig to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CustomerConfig input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Aliases == input.Aliases ||
                    (this.Aliases != null &&
                    this.Aliases.Equals(input.Aliases))
                ) && 
                (
                    this.Database == input.Database ||
                    (this.Database != null &&
                    this.Database.Equals(input.Database))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.S3Config == input.S3Config ||
                    (this.S3Config != null &&
                    this.S3Config.Equals(input.S3Config))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Aliases != null)
                    hashCode = hashCode * 59 + this.Aliases.GetHashCode();
                if (this.Database != null)
                    hashCode = hashCode * 59 + this.Database.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.S3Config != null)
                    hashCode = hashCode * 59 + this.S3Config.GetHashCode();
                return hashCode;
            }
        }

    }

}
