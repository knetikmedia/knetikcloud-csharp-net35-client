/* 
 * Knetik Platform API Documentation latest 
 *
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;

namespace com.knetikcloud.Model
{
    /// <summary>
    /// User
    /// </summary>
    [DataContract]
    public partial class User :  IEquatable<User>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="User" /> class.
        /// </summary>
        /// <param name="AdditionalProperties">AdditionalProperties.</param>
        /// <param name="Address">Address.</param>
        /// <param name="Address2">Address2.</param>
        /// <param name="Affiliate">Affiliate.</param>
        /// <param name="AvatarUrl">AvatarUrl.</param>
        /// <param name="Children">Children.</param>
        /// <param name="City">City.</param>
        /// <param name="Country">Country.</param>
        /// <param name="Currency">Currency.</param>
        /// <param name="DateCreated">DateCreated.</param>
        /// <param name="DateOfBirth">DateOfBirth.</param>
        /// <param name="DateUpdated">DateUpdated.</param>
        /// <param name="Description">Description.</param>
        /// <param name="DisplayName">DisplayName.</param>
        /// <param name="Email">Email.</param>
        /// <param name="FirstName">FirstName.</param>
        /// <param name="Fullname">Fullname.</param>
        /// <param name="Gender">Gender.</param>
        /// <param name="Groups">Groups.</param>
        /// <param name="Guest">Guest.</param>
        /// <param name="Id">Id.</param>
        /// <param name="InviteToken">InviteToken.</param>
        /// <param name="Lang">Lang.</param>
        /// <param name="LastActivity">LastActivity.</param>
        /// <param name="LastLogin">LastLogin.</param>
        /// <param name="LastName">LastName.</param>
        /// <param name="LockoutAttempts">LockoutAttempts.</param>
        /// <param name="LockoutDate">LockoutDate.</param>
        /// <param name="MobileNumber">MobileNumber.</param>
        /// <param name="OldId">OldId.</param>
        /// <param name="Parents">Parents.</param>
        /// <param name="Password">Password.</param>
        /// <param name="PostalCode">PostalCode.</param>
        /// <param name="PropertiesString">PropertiesString.</param>
        /// <param name="Roles">Roles.</param>
        /// <param name="State">State.</param>
        /// <param name="Status">Status.</param>
        /// <param name="TagStrings">TagStrings.</param>
        /// <param name="Tags">Tags.</param>
        /// <param name="Template">Template.</param>
        /// <param name="Timezone">Timezone.</param>
        /// <param name="Token">Token.</param>
        /// <param name="TypeHint">TypeHint.</param>
        /// <param name="Username">Username.</param>
        public User(Dictionary<string, Property> AdditionalProperties = default(Dictionary<string, Property>), string Address = default(string), string Address2 = default(string), Affiliate Affiliate = default(Affiliate), string AvatarUrl = default(string), List<UserRelationship> Children = default(List<UserRelationship>), string City = default(string), Country Country = default(Country), Currency Currency = default(Currency), long? DateCreated = default(long?), long? DateOfBirth = default(long?), long? DateUpdated = default(long?), string Description = default(string), string DisplayName = default(string), string Email = default(string), string FirstName = default(string), string Fullname = default(string), string Gender = default(string), List<GroupMember> Groups = default(List<GroupMember>), bool? Guest = default(bool?), int? Id = default(int?), string InviteToken = default(string), Language Lang = default(Language), long? LastActivity = default(long?), long? LastLogin = default(long?), string LastName = default(string), int? LockoutAttempts = default(int?), long? LockoutDate = default(long?), string MobileNumber = default(string), int? OldId = default(int?), List<UserRelationship> Parents = default(List<UserRelationship>), string Password = default(string), string PostalCode = default(string), string PropertiesString = default(string), List<Role> Roles = default(List<Role>), string State = default(string), string Status = default(string), List<string> TagStrings = default(List<string>), List<UserTag> Tags = default(List<UserTag>), string Template = default(string), Timezone Timezone = default(Timezone), string Token = default(string), string TypeHint = default(string), string Username = default(string))
        {
            this.AdditionalProperties = AdditionalProperties;
            this.Address = Address;
            this.Address2 = Address2;
            this.Affiliate = Affiliate;
            this.AvatarUrl = AvatarUrl;
            this.Children = Children;
            this.City = City;
            this.Country = Country;
            this.Currency = Currency;
            this.DateCreated = DateCreated;
            this.DateOfBirth = DateOfBirth;
            this.DateUpdated = DateUpdated;
            this.Description = Description;
            this.DisplayName = DisplayName;
            this.Email = Email;
            this.FirstName = FirstName;
            this.Fullname = Fullname;
            this.Gender = Gender;
            this.Groups = Groups;
            this.Guest = Guest;
            this.Id = Id;
            this.InviteToken = InviteToken;
            this.Lang = Lang;
            this.LastActivity = LastActivity;
            this.LastLogin = LastLogin;
            this.LastName = LastName;
            this.LockoutAttempts = LockoutAttempts;
            this.LockoutDate = LockoutDate;
            this.MobileNumber = MobileNumber;
            this.OldId = OldId;
            this.Parents = Parents;
            this.Password = Password;
            this.PostalCode = PostalCode;
            this.PropertiesString = PropertiesString;
            this.Roles = Roles;
            this.State = State;
            this.Status = Status;
            this.TagStrings = TagStrings;
            this.Tags = Tags;
            this.Template = Template;
            this.Timezone = Timezone;
            this.Token = Token;
            this.TypeHint = TypeHint;
            this.Username = Username;
        }
        
        /// <summary>
        /// Gets or Sets AdditionalProperties
        /// </summary>
        [DataMember(Name="additional_properties", EmitDefaultValue=false)]
        public Dictionary<string, Property> AdditionalProperties { get; set; }
        /// <summary>
        /// Gets or Sets Address
        /// </summary>
        [DataMember(Name="address", EmitDefaultValue=false)]
        public string Address { get; set; }
        /// <summary>
        /// Gets or Sets Address2
        /// </summary>
        [DataMember(Name="address2", EmitDefaultValue=false)]
        public string Address2 { get; set; }
        /// <summary>
        /// Gets or Sets Affiliate
        /// </summary>
        [DataMember(Name="affiliate", EmitDefaultValue=false)]
        public Affiliate Affiliate { get; set; }
        /// <summary>
        /// Gets or Sets AvatarUrl
        /// </summary>
        [DataMember(Name="avatar_url", EmitDefaultValue=false)]
        public string AvatarUrl { get; set; }
        /// <summary>
        /// Gets or Sets Children
        /// </summary>
        [DataMember(Name="children", EmitDefaultValue=false)]
        public List<UserRelationship> Children { get; set; }
        /// <summary>
        /// Gets or Sets City
        /// </summary>
        [DataMember(Name="city", EmitDefaultValue=false)]
        public string City { get; set; }
        /// <summary>
        /// Gets or Sets Country
        /// </summary>
        [DataMember(Name="country", EmitDefaultValue=false)]
        public Country Country { get; set; }
        /// <summary>
        /// Gets or Sets Currency
        /// </summary>
        [DataMember(Name="currency", EmitDefaultValue=false)]
        public Currency Currency { get; set; }
        /// <summary>
        /// Gets or Sets DateCreated
        /// </summary>
        [DataMember(Name="date_created", EmitDefaultValue=false)]
        public long? DateCreated { get; set; }
        /// <summary>
        /// Gets or Sets DateOfBirth
        /// </summary>
        [DataMember(Name="date_of_birth", EmitDefaultValue=false)]
        public long? DateOfBirth { get; set; }
        /// <summary>
        /// Gets or Sets DateUpdated
        /// </summary>
        [DataMember(Name="date_updated", EmitDefaultValue=false)]
        public long? DateUpdated { get; set; }
        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string Description { get; set; }
        /// <summary>
        /// Gets or Sets DisplayName
        /// </summary>
        [DataMember(Name="display_name", EmitDefaultValue=false)]
        public string DisplayName { get; set; }
        /// <summary>
        /// Gets or Sets Email
        /// </summary>
        [DataMember(Name="email", EmitDefaultValue=false)]
        public string Email { get; set; }
        /// <summary>
        /// Gets or Sets FirstName
        /// </summary>
        [DataMember(Name="first_name", EmitDefaultValue=false)]
        public string FirstName { get; set; }
        /// <summary>
        /// Gets or Sets Fullname
        /// </summary>
        [DataMember(Name="fullname", EmitDefaultValue=false)]
        public string Fullname { get; set; }
        /// <summary>
        /// Gets or Sets Gender
        /// </summary>
        [DataMember(Name="gender", EmitDefaultValue=false)]
        public string Gender { get; set; }
        /// <summary>
        /// Gets or Sets Groups
        /// </summary>
        [DataMember(Name="groups", EmitDefaultValue=false)]
        public List<GroupMember> Groups { get; set; }
        /// <summary>
        /// Gets or Sets Guest
        /// </summary>
        [DataMember(Name="guest", EmitDefaultValue=false)]
        public bool? Guest { get; set; }
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public int? Id { get; set; }
        /// <summary>
        /// Gets or Sets InviteToken
        /// </summary>
        [DataMember(Name="invite_token", EmitDefaultValue=false)]
        public string InviteToken { get; set; }
        /// <summary>
        /// Gets or Sets Lang
        /// </summary>
        [DataMember(Name="lang", EmitDefaultValue=false)]
        public Language Lang { get; set; }
        /// <summary>
        /// Gets or Sets LastActivity
        /// </summary>
        [DataMember(Name="last_activity", EmitDefaultValue=false)]
        public long? LastActivity { get; set; }
        /// <summary>
        /// Gets or Sets LastLogin
        /// </summary>
        [DataMember(Name="last_login", EmitDefaultValue=false)]
        public long? LastLogin { get; set; }
        /// <summary>
        /// Gets or Sets LastName
        /// </summary>
        [DataMember(Name="last_name", EmitDefaultValue=false)]
        public string LastName { get; set; }
        /// <summary>
        /// Gets or Sets LockoutAttempts
        /// </summary>
        [DataMember(Name="lockout_attempts", EmitDefaultValue=false)]
        public int? LockoutAttempts { get; set; }
        /// <summary>
        /// Gets or Sets LockoutDate
        /// </summary>
        [DataMember(Name="lockout_date", EmitDefaultValue=false)]
        public long? LockoutDate { get; set; }
        /// <summary>
        /// Gets or Sets MobileNumber
        /// </summary>
        [DataMember(Name="mobile_number", EmitDefaultValue=false)]
        public string MobileNumber { get; set; }
        /// <summary>
        /// Gets or Sets OldId
        /// </summary>
        [DataMember(Name="old_id", EmitDefaultValue=false)]
        public int? OldId { get; set; }
        /// <summary>
        /// Gets or Sets Parents
        /// </summary>
        [DataMember(Name="parents", EmitDefaultValue=false)]
        public List<UserRelationship> Parents { get; set; }
        /// <summary>
        /// Gets or Sets Password
        /// </summary>
        [DataMember(Name="password", EmitDefaultValue=false)]
        public string Password { get; set; }
        /// <summary>
        /// Gets or Sets PostalCode
        /// </summary>
        [DataMember(Name="postal_code", EmitDefaultValue=false)]
        public string PostalCode { get; set; }
        /// <summary>
        /// Gets or Sets PropertiesString
        /// </summary>
        [DataMember(Name="properties_string", EmitDefaultValue=false)]
        public string PropertiesString { get; set; }
        /// <summary>
        /// Gets or Sets Roles
        /// </summary>
        [DataMember(Name="roles", EmitDefaultValue=false)]
        public List<Role> Roles { get; set; }
        /// <summary>
        /// Gets or Sets State
        /// </summary>
        [DataMember(Name="state", EmitDefaultValue=false)]
        public string State { get; set; }
        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="status", EmitDefaultValue=false)]
        public string Status { get; set; }
        /// <summary>
        /// Gets or Sets TagStrings
        /// </summary>
        [DataMember(Name="tag_strings", EmitDefaultValue=false)]
        public List<string> TagStrings { get; set; }
        /// <summary>
        /// Gets or Sets Tags
        /// </summary>
        [DataMember(Name="tags", EmitDefaultValue=false)]
        public List<UserTag> Tags { get; set; }
        /// <summary>
        /// Gets or Sets Template
        /// </summary>
        [DataMember(Name="template", EmitDefaultValue=false)]
        public string Template { get; set; }
        /// <summary>
        /// Gets or Sets Timezone
        /// </summary>
        [DataMember(Name="timezone", EmitDefaultValue=false)]
        public Timezone Timezone { get; set; }
        /// <summary>
        /// Gets or Sets Token
        /// </summary>
        [DataMember(Name="token", EmitDefaultValue=false)]
        public string Token { get; set; }
        /// <summary>
        /// Gets or Sets TypeHint
        /// </summary>
        [DataMember(Name="type_hint", EmitDefaultValue=false)]
        public string TypeHint { get; set; }
        /// <summary>
        /// Gets or Sets Username
        /// </summary>
        [DataMember(Name="username", EmitDefaultValue=false)]
        public string Username { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class User {\n");
            sb.Append("  AdditionalProperties: ").Append(AdditionalProperties).Append("\n");
            sb.Append("  Address: ").Append(Address).Append("\n");
            sb.Append("  Address2: ").Append(Address2).Append("\n");
            sb.Append("  Affiliate: ").Append(Affiliate).Append("\n");
            sb.Append("  AvatarUrl: ").Append(AvatarUrl).Append("\n");
            sb.Append("  Children: ").Append(Children).Append("\n");
            sb.Append("  City: ").Append(City).Append("\n");
            sb.Append("  Country: ").Append(Country).Append("\n");
            sb.Append("  Currency: ").Append(Currency).Append("\n");
            sb.Append("  DateCreated: ").Append(DateCreated).Append("\n");
            sb.Append("  DateOfBirth: ").Append(DateOfBirth).Append("\n");
            sb.Append("  DateUpdated: ").Append(DateUpdated).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  DisplayName: ").Append(DisplayName).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  FirstName: ").Append(FirstName).Append("\n");
            sb.Append("  Fullname: ").Append(Fullname).Append("\n");
            sb.Append("  Gender: ").Append(Gender).Append("\n");
            sb.Append("  Groups: ").Append(Groups).Append("\n");
            sb.Append("  Guest: ").Append(Guest).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  InviteToken: ").Append(InviteToken).Append("\n");
            sb.Append("  Lang: ").Append(Lang).Append("\n");
            sb.Append("  LastActivity: ").Append(LastActivity).Append("\n");
            sb.Append("  LastLogin: ").Append(LastLogin).Append("\n");
            sb.Append("  LastName: ").Append(LastName).Append("\n");
            sb.Append("  LockoutAttempts: ").Append(LockoutAttempts).Append("\n");
            sb.Append("  LockoutDate: ").Append(LockoutDate).Append("\n");
            sb.Append("  MobileNumber: ").Append(MobileNumber).Append("\n");
            sb.Append("  OldId: ").Append(OldId).Append("\n");
            sb.Append("  Parents: ").Append(Parents).Append("\n");
            sb.Append("  Password: ").Append(Password).Append("\n");
            sb.Append("  PostalCode: ").Append(PostalCode).Append("\n");
            sb.Append("  PropertiesString: ").Append(PropertiesString).Append("\n");
            sb.Append("  Roles: ").Append(Roles).Append("\n");
            sb.Append("  State: ").Append(State).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  TagStrings: ").Append(TagStrings).Append("\n");
            sb.Append("  Tags: ").Append(Tags).Append("\n");
            sb.Append("  Template: ").Append(Template).Append("\n");
            sb.Append("  Timezone: ").Append(Timezone).Append("\n");
            sb.Append("  Token: ").Append(Token).Append("\n");
            sb.Append("  TypeHint: ").Append(TypeHint).Append("\n");
            sb.Append("  Username: ").Append(Username).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as User);
        }

        /// <summary>
        /// Returns true if User instances are equal
        /// </summary>
        /// <param name="other">Instance of User to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(User other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.AdditionalProperties == other.AdditionalProperties ||
                    this.AdditionalProperties != null &&
                    this.AdditionalProperties.SequenceEqual(other.AdditionalProperties)
                ) && 
                (
                    this.Address == other.Address ||
                    this.Address != null &&
                    this.Address.Equals(other.Address)
                ) && 
                (
                    this.Address2 == other.Address2 ||
                    this.Address2 != null &&
                    this.Address2.Equals(other.Address2)
                ) && 
                (
                    this.Affiliate == other.Affiliate ||
                    this.Affiliate != null &&
                    this.Affiliate.Equals(other.Affiliate)
                ) && 
                (
                    this.AvatarUrl == other.AvatarUrl ||
                    this.AvatarUrl != null &&
                    this.AvatarUrl.Equals(other.AvatarUrl)
                ) && 
                (
                    this.Children == other.Children ||
                    this.Children != null &&
                    this.Children.SequenceEqual(other.Children)
                ) && 
                (
                    this.City == other.City ||
                    this.City != null &&
                    this.City.Equals(other.City)
                ) && 
                (
                    this.Country == other.Country ||
                    this.Country != null &&
                    this.Country.Equals(other.Country)
                ) && 
                (
                    this.Currency == other.Currency ||
                    this.Currency != null &&
                    this.Currency.Equals(other.Currency)
                ) && 
                (
                    this.DateCreated == other.DateCreated ||
                    this.DateCreated != null &&
                    this.DateCreated.Equals(other.DateCreated)
                ) && 
                (
                    this.DateOfBirth == other.DateOfBirth ||
                    this.DateOfBirth != null &&
                    this.DateOfBirth.Equals(other.DateOfBirth)
                ) && 
                (
                    this.DateUpdated == other.DateUpdated ||
                    this.DateUpdated != null &&
                    this.DateUpdated.Equals(other.DateUpdated)
                ) && 
                (
                    this.Description == other.Description ||
                    this.Description != null &&
                    this.Description.Equals(other.Description)
                ) && 
                (
                    this.DisplayName == other.DisplayName ||
                    this.DisplayName != null &&
                    this.DisplayName.Equals(other.DisplayName)
                ) && 
                (
                    this.Email == other.Email ||
                    this.Email != null &&
                    this.Email.Equals(other.Email)
                ) && 
                (
                    this.FirstName == other.FirstName ||
                    this.FirstName != null &&
                    this.FirstName.Equals(other.FirstName)
                ) && 
                (
                    this.Fullname == other.Fullname ||
                    this.Fullname != null &&
                    this.Fullname.Equals(other.Fullname)
                ) && 
                (
                    this.Gender == other.Gender ||
                    this.Gender != null &&
                    this.Gender.Equals(other.Gender)
                ) && 
                (
                    this.Groups == other.Groups ||
                    this.Groups != null &&
                    this.Groups.SequenceEqual(other.Groups)
                ) && 
                (
                    this.Guest == other.Guest ||
                    this.Guest != null &&
                    this.Guest.Equals(other.Guest)
                ) && 
                (
                    this.Id == other.Id ||
                    this.Id != null &&
                    this.Id.Equals(other.Id)
                ) && 
                (
                    this.InviteToken == other.InviteToken ||
                    this.InviteToken != null &&
                    this.InviteToken.Equals(other.InviteToken)
                ) && 
                (
                    this.Lang == other.Lang ||
                    this.Lang != null &&
                    this.Lang.Equals(other.Lang)
                ) && 
                (
                    this.LastActivity == other.LastActivity ||
                    this.LastActivity != null &&
                    this.LastActivity.Equals(other.LastActivity)
                ) && 
                (
                    this.LastLogin == other.LastLogin ||
                    this.LastLogin != null &&
                    this.LastLogin.Equals(other.LastLogin)
                ) && 
                (
                    this.LastName == other.LastName ||
                    this.LastName != null &&
                    this.LastName.Equals(other.LastName)
                ) && 
                (
                    this.LockoutAttempts == other.LockoutAttempts ||
                    this.LockoutAttempts != null &&
                    this.LockoutAttempts.Equals(other.LockoutAttempts)
                ) && 
                (
                    this.LockoutDate == other.LockoutDate ||
                    this.LockoutDate != null &&
                    this.LockoutDate.Equals(other.LockoutDate)
                ) && 
                (
                    this.MobileNumber == other.MobileNumber ||
                    this.MobileNumber != null &&
                    this.MobileNumber.Equals(other.MobileNumber)
                ) && 
                (
                    this.OldId == other.OldId ||
                    this.OldId != null &&
                    this.OldId.Equals(other.OldId)
                ) && 
                (
                    this.Parents == other.Parents ||
                    this.Parents != null &&
                    this.Parents.SequenceEqual(other.Parents)
                ) && 
                (
                    this.Password == other.Password ||
                    this.Password != null &&
                    this.Password.Equals(other.Password)
                ) && 
                (
                    this.PostalCode == other.PostalCode ||
                    this.PostalCode != null &&
                    this.PostalCode.Equals(other.PostalCode)
                ) && 
                (
                    this.PropertiesString == other.PropertiesString ||
                    this.PropertiesString != null &&
                    this.PropertiesString.Equals(other.PropertiesString)
                ) && 
                (
                    this.Roles == other.Roles ||
                    this.Roles != null &&
                    this.Roles.SequenceEqual(other.Roles)
                ) && 
                (
                    this.State == other.State ||
                    this.State != null &&
                    this.State.Equals(other.State)
                ) && 
                (
                    this.Status == other.Status ||
                    this.Status != null &&
                    this.Status.Equals(other.Status)
                ) && 
                (
                    this.TagStrings == other.TagStrings ||
                    this.TagStrings != null &&
                    this.TagStrings.SequenceEqual(other.TagStrings)
                ) && 
                (
                    this.Tags == other.Tags ||
                    this.Tags != null &&
                    this.Tags.SequenceEqual(other.Tags)
                ) && 
                (
                    this.Template == other.Template ||
                    this.Template != null &&
                    this.Template.Equals(other.Template)
                ) && 
                (
                    this.Timezone == other.Timezone ||
                    this.Timezone != null &&
                    this.Timezone.Equals(other.Timezone)
                ) && 
                (
                    this.Token == other.Token ||
                    this.Token != null &&
                    this.Token.Equals(other.Token)
                ) && 
                (
                    this.TypeHint == other.TypeHint ||
                    this.TypeHint != null &&
                    this.TypeHint.Equals(other.TypeHint)
                ) && 
                (
                    this.Username == other.Username ||
                    this.Username != null &&
                    this.Username.Equals(other.Username)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.AdditionalProperties != null)
                    hash = hash * 59 + this.AdditionalProperties.GetHashCode();
                if (this.Address != null)
                    hash = hash * 59 + this.Address.GetHashCode();
                if (this.Address2 != null)
                    hash = hash * 59 + this.Address2.GetHashCode();
                if (this.Affiliate != null)
                    hash = hash * 59 + this.Affiliate.GetHashCode();
                if (this.AvatarUrl != null)
                    hash = hash * 59 + this.AvatarUrl.GetHashCode();
                if (this.Children != null)
                    hash = hash * 59 + this.Children.GetHashCode();
                if (this.City != null)
                    hash = hash * 59 + this.City.GetHashCode();
                if (this.Country != null)
                    hash = hash * 59 + this.Country.GetHashCode();
                if (this.Currency != null)
                    hash = hash * 59 + this.Currency.GetHashCode();
                if (this.DateCreated != null)
                    hash = hash * 59 + this.DateCreated.GetHashCode();
                if (this.DateOfBirth != null)
                    hash = hash * 59 + this.DateOfBirth.GetHashCode();
                if (this.DateUpdated != null)
                    hash = hash * 59 + this.DateUpdated.GetHashCode();
                if (this.Description != null)
                    hash = hash * 59 + this.Description.GetHashCode();
                if (this.DisplayName != null)
                    hash = hash * 59 + this.DisplayName.GetHashCode();
                if (this.Email != null)
                    hash = hash * 59 + this.Email.GetHashCode();
                if (this.FirstName != null)
                    hash = hash * 59 + this.FirstName.GetHashCode();
                if (this.Fullname != null)
                    hash = hash * 59 + this.Fullname.GetHashCode();
                if (this.Gender != null)
                    hash = hash * 59 + this.Gender.GetHashCode();
                if (this.Groups != null)
                    hash = hash * 59 + this.Groups.GetHashCode();
                if (this.Guest != null)
                    hash = hash * 59 + this.Guest.GetHashCode();
                if (this.Id != null)
                    hash = hash * 59 + this.Id.GetHashCode();
                if (this.InviteToken != null)
                    hash = hash * 59 + this.InviteToken.GetHashCode();
                if (this.Lang != null)
                    hash = hash * 59 + this.Lang.GetHashCode();
                if (this.LastActivity != null)
                    hash = hash * 59 + this.LastActivity.GetHashCode();
                if (this.LastLogin != null)
                    hash = hash * 59 + this.LastLogin.GetHashCode();
                if (this.LastName != null)
                    hash = hash * 59 + this.LastName.GetHashCode();
                if (this.LockoutAttempts != null)
                    hash = hash * 59 + this.LockoutAttempts.GetHashCode();
                if (this.LockoutDate != null)
                    hash = hash * 59 + this.LockoutDate.GetHashCode();
                if (this.MobileNumber != null)
                    hash = hash * 59 + this.MobileNumber.GetHashCode();
                if (this.OldId != null)
                    hash = hash * 59 + this.OldId.GetHashCode();
                if (this.Parents != null)
                    hash = hash * 59 + this.Parents.GetHashCode();
                if (this.Password != null)
                    hash = hash * 59 + this.Password.GetHashCode();
                if (this.PostalCode != null)
                    hash = hash * 59 + this.PostalCode.GetHashCode();
                if (this.PropertiesString != null)
                    hash = hash * 59 + this.PropertiesString.GetHashCode();
                if (this.Roles != null)
                    hash = hash * 59 + this.Roles.GetHashCode();
                if (this.State != null)
                    hash = hash * 59 + this.State.GetHashCode();
                if (this.Status != null)
                    hash = hash * 59 + this.Status.GetHashCode();
                if (this.TagStrings != null)
                    hash = hash * 59 + this.TagStrings.GetHashCode();
                if (this.Tags != null)
                    hash = hash * 59 + this.Tags.GetHashCode();
                if (this.Template != null)
                    hash = hash * 59 + this.Template.GetHashCode();
                if (this.Timezone != null)
                    hash = hash * 59 + this.Timezone.GetHashCode();
                if (this.Token != null)
                    hash = hash * 59 + this.Token.GetHashCode();
                if (this.TypeHint != null)
                    hash = hash * 59 + this.TypeHint.GetHashCode();
                if (this.Username != null)
                    hash = hash * 59 + this.Username.GetHashCode();
                return hash;
            }
        }

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        { 
            yield break;
        }
    }

}
